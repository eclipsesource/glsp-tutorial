{
	"title": "GLSP Tutorial",
	"description": "Diagram editors in the web with Eclipse GLSP",
	"tutorialFolder": "glsp-examples",
	"typeId": "#tutorial",
	"exercises": [
		{
			"title": "Introduction",
			"description": "Getting started learning the basics of the Eclipse Graphical Language Server Platform (GLSP)",
			"typeId": "#exercise",
			"content": [
				{
					"html": "<h2>Eclipse Graphical Language Server Platform (GLSP)</h2><br/><p>GLSP is an extensible open source framework to build custom diagram editors in the web/cloud. These editors can be deployed stand-alone or integrated into a web-based IDE such as Eclipse Theia or VS Code.</p>"
				},
				{
					"image": {
						"src": "https://www.eclipse.org/glsp/images/diagramanimated.gif",
						"description": "GLSP",
						"width": "80%"
					}
				},
				{
					"html": "<p>The Eclipse GLSP project consists of a <em>diagram client</em> and a <em>diagram server</em>. The diagram client is responsible for the visual representation, while the diagram server is responsible for the business logic behind the graphical modeling language. They are connected via the Graphical Language Server Protocol.</p>"
				},
				{
					"image": {
						"src": "https://www.eclipse.org/glsp/images/glspoverview.png",
						"description": "GLSP",
						"width": "80%"
					}
				},
				{
					"html": "<p>We will have a closer look at the following components:<ul><li>Diagram Client</li><ul><li>The diagram client is a mostly generic component that does not need to be reimplemented for specific diagrams. The client is based on HTML5, Typescript, Sprotty and SVG. The generic GLSP diagram client can be connected to any domain-specific GLSP diagram server via the defined protocol to support a specific diagram type. Furthermore, the diagram client can be customized and integrated in a website, a VS Code Client, a Theia Client or run as a standalone Client.</li></ul><li>Graphical Language Server Protocol</li><ul><li>Following the successful pattern provided by the language server protocol (LSP) for textual languages, GLSP provides a defined protocol for the communication between the GLSP client and the server. In this modular architecture, server and client are well encapsulated and can be developed independantly.</li></ul><li>Graphical Language Server</li><ul><li>Enabled by the flexible protocol-based architecture, a domain-specific GLSP server can be implemented in any preferred technology. Therefore, you can easily integrate a GLSP server into an existing environment and reuse the domain-specific business and diagram logic. GLSP provides a frame for the implementation of GLSP servers using Java, as well as integrations with EMF and other existing modeling technologies.</li></ul></ul></p>"
				},
				{
					"html": "<p>In the following exercises we will show you how you can build and modify a simple diagram editor yourself. We will integrate the client in Eclipse Theia and develop a Java-based diagram server</p>"
				}
			]
		},
		{
			"title": "Setup workspace (optional)",
			"description": "Set up the workspace for the tutorial",
			"typeId": "#exercise",
			"content": [
				{
					"html": "<p>In this step, you will set up your workspace as a preparation for the tutorial. This includes cloning, building and launching a minimal example diagram editor. We will modify and extend this minimal editor in the following exercises.</p><p><i>If you are following this tutorial inside the online IDE GitPod, you can skip this step, since the </i><code>glsp-examles</code><i> folder has already been cloned into your workspace and the dependencies installed running </i><code>mvn clean install</code><i> and </i><code>yarn</code><i> in the server and client respectively.</i></p><p>If you follow this tutorial offline, or without any prebuild functionality, you can do these steps by yourself as descibe in the following.<br>Please follow these steps:<br>Clone <a href='https://github.com/eclipse-glsp/glsp-examples.git'>GLSP Repository</a> into your workspace.<br>Change directory and run: <br><code>cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn clean install<br>cd ../../client && yarn</code><br>from the terminal. This will take a few minutes to complete.</p><p>You can click on the bottom below to do these steps automatically.</p>"
				},
				{
					"button": {
						"text": "Clone and build Minimal Example",
						"commands": [
							{
								"terminalCommands": [
									"silently kill -9 $(lsof -t -i:3000)",
									"silently kill -9 $(lsof -t -i:5013)",
									"git clone https://github.com/eclipse-glsp/glsp-examples.git",
									"cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn clean install",
									"cd glsp-examples/minimal/client && yarn",
									"silently cd glsp-examples/minimal/client && yarn start:browser"
								]
							}
						]
					}
				},
				{
					"html": "<p>After that, to run the minimal example click on the button below or run the following commands in the terminal.<br><code>cd minimal/client<br>yarn start:browser</code></p><p>Again, you can use the Button below to do that automatically:</p>"
				},
				{
					"button": {
						"text": "Launch Minimal Example",
						"commands": [
							{
								"terminalCommands": [
									"silently kill -9 $(lsof -t -i:3000)",
									"silently kill -9 $(lsof -t -i:5013)",
									"silently cd glsp-examples/minimal/client && yarn start:browser"
								]
							}
						]
					}
				},
				{
					"html": "<p>You should now be able to use the minimal diagram example on port 3000.<br>It might be necessary to refresh the page after waiting some second.<br>If you're following the tutorial offline, open a browser and navigate to <code><a href=\"http://localhost:3000\">localhost:3000</a></code>.</p><p>Once the application has launched, you should find an example diagram file in the workspace that you can open. The minimal example diagram editor allows your to create one node type in the diagram editor, represented as a rectangle. Please see the video below for more details on how to use the minimal diagram editor</p>"
				},
				{
					"image": {
						"src": "https://raw.githubusercontent.com/eclipsesource/glsp-tutorial/main/.tutorial/images/runningminimalexample.gif",
						"description": "GLSP",
						"width": "80%"
					}
				},
				{
					"html": "<p>To verify that everything is set up correctly, you can use the test button below. Once done, please click next to continue with the next exercise</p>"
				}
			],
			"test": [
				{
					"tests": [
						{
							"testName": "Checking files in current directory",
							"command": {
								"checkIfFilesExist": [
									"glsp-examples/.gitignore",
									"glsp-examples/README.md",
									"glsp-examples/CONTRIBUTING.md",
									"glsp-examples/Jenkinsfile",
									"glsp-examples/LICENSE",
									"glsp-examples/minimal/client/workspace/example.minimal",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalDiagramConfiguration.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalGLSPModule.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalServerLauncher.java"
								]
							}
						}
					]
				}
			],
			"solve": [
				{
					"terminalCommands": [
						"git clone https://github.com/eclipse-glsp/glsp-examples.git",
						"cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn clean install",
						"cd glsp-examples/minimal/client && yarn",
						"silently kill -9 $(lsof -t -i:3000)",
						"silently kill -9 $(lsof -t -i:5013)",
						"silently cd glsp-examples/minimal/client && yarn start:browser"
					]
				}
			],
			"cleanState": [
				{
					"cleanExerciseFolder": {}
				}
			]
		},
		{
			"title": "A minimal GLSP Server",
			"description": "Learn about the basic building blocks of a GLSP server.",
			"typeId": "#exercise",
			"content": [
				{
					"html": "<p>The minimal example is a very simple starting point to understand the principles of the GLSP project.<br />Right now we have only one node type, which is a plain rectangle that can be resized and deleted.<br /></p><h4>Server part</h4><p>In this example the server consists of one single bundle with four files. <br />The most important one of those is: <code><i>'MinimalGLSPModule.java'</i></code> which can be found in the 'glsp-examples/minimal/server/org.eclipse.glsp.example.minimal' directory.<br />Let's open it. Please open the file now.</p>"
				},
				{
					"hint": {
						"text": "Can't find it?",
						"content": [
							{
								"button": {
									"text": "Open File",
									"commands": [
										{
											"openFile": "glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalGLSPModule.java"
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<p>Inside of this file you can see the basic configuration of the server.<br>The <code><i>ModelFactory</i></code> is responsible for loading diagrams and creating graph models out of them. In the minimal example, a pre-implemented model factory is used that loads the diagram from a JSON file.</p>"
				},
				{
					"html": "<p><code><i>OperationHandlers</i></code> implement the actual business logic of the diagram. In the minimal example, there is one handler (<code><i>MinimalCreateNodeOperationHandler</i></code>), responsible for creating the default node. Note that other features in the minimal example, such as resizing and moving, are actually already provided by the framework. Therefore, there is not handler for them, but the features are just turned on.</p>"
				},
				{
					"html": "<p>The configuration of available features per node is done in the <code><i>DiagramConfiguration</i></code> via editing hints. In this example we have just one node edit-hint for the default node.</p>"
				}
			]
		},
		{
			"title": "Modify nodes",
			"description": "Learn how to modify existing nodes in the minimal example",
			"typeId": "#exercise",
			"content": [
				{
					"html": "<br><h4>CreateNodeOperationHandler</h4><p>The next file <code><i>MinimalCreateNodeOperationHandler.java</i></code> is the actual custom business logic of the minimal diagram. It contains the code which is executed when we add a new node.</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"button": {
									"text": "Open File",
									"commands": [
										{
											"openFile": "glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java"
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<p>Any registered <code><i>CreateNodeHandler</i></code> will by default create an new entry in the pallet of the diagram editor. <br>The handler creates the visual representation and thereby influences the look of the created node. <br>Try to change the default size of the node by changing both of it's values in the size function to 20, to make it square.</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"html": "<p>Change the first value (40) to 20 and check if it changes the node size when you add a new node.</p>"
							},
							{
								"image": {
									"src": "https://raw.githubusercontent.com/eclipsesource/glsp-tutorial/main/.tutorial/images/code-snip2.png",
									"description": "GLSP",
									"width": "80%"
								}
							}
						]
					}
				},
				{
					"html": "<p>In order to see the changes let's re-build the example:</p>"
				},
				{
					"button": {
						"text": "Re-Build Minimal Example",
						"commands": [
							{
								"terminalCommands": [
									"cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn clean install",
									"cd glsp-examples/minimal/client/minimal-theia && yarn copy:server",
									"silently kill -9 $(lsof -t -i:3000)",
									"silently kill -9 $(lsof -t -i:5013)",
									"silently cd glsp-examples/minimal/client && yarn start:browser"
								]
							}
						]
					}
				},
				{
					"html": "<p>You should now be able to use the minimal diagram example on Port 3000.<br>It might be necessary to refresh the page after waiting some seconds.<br>If you're following the tutorial offline, open a browser and navigate to <code>localhost:3000</code>.</p><p>Once the application has launched, you should find an example diagram file in the workspace. After opening the file, you should be able to create a new node by clicking on “Minimal Node”. In contrast to the already existing nodes, the now created nodes will be square.  Please refer to the video below.</p>"
				},
				{
					"image": {
						"src": "https://raw.githubusercontent.com/eclipsesource/glsp-tutorial/main/.tutorial/images/squarenodesexample.gif",
						"description": "GLSP",
						"width": "80%"
					}
				}
			],
			"test": [
				{
					"tests": [
						{
							"testName": "Checking files in current directory",
							"command": {
								"checkIfFilesExist": [
									"glsp-examples/.gitignore",
									"glsp-examples/README.md",
									"glsp-examples/CONTRIBUTING.md",
									"glsp-examples/Jenkinsfile",
									"glsp-examples/LICENSE",
									"glsp-examples/minimal/client/workspace/example.minimal",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalDiagramConfiguration.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalGLSPModule.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalServerLauncher.java"
								]
							}
						}
					]
				},
				{
					"fileName": "glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java",
					"solution": ".tutorial/solution/MinimalCreateNodeOperationHandler.java",
					"tests": [
						{
							"testName": "Running Unit Test",
							"command": {
								"terminalCommands": [
									"cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn test -DskipTests=false"
								]
							}
						}
					]
				}
			],
			"solve": [
				{
					"terminalCommands": [
						"cp .tutorial/solution/MinimalCreateNodeOperationHandler.java glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java",
						"cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn clean install",
						"cd glsp-examples/minimal/client/minimal-theia && yarn copy:server",
						"silently kill -9 $(lsof -t -i:3000)",
						"silently kill -9 $(lsof -t -i:5013)",
						"silently cd glsp-examples/minimal/client && yarn start:browser"
					]
				}
			]
		},
		{
			"title": "Add nodes",
			"description": "Learn how to add your custom nodes in the minimal example",
			"typeId": "#exercise",
			"content": [
				{
					"html": "<p>Now let's create another node type. This will require a second operation handler. The easiest way to create another node type is to simply duplicate the file MinimalCreateNodeOperationHandler.java and call it say MinimalCreateNewNodeOperationHandler.java</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"button": {
									"text": "Create new Handler",
									"commands": [
										{
											"terminalCommands": [
												"cp glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNewNodeOperationHandler.java"
											]
										},
										{
											"openFile": "glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNewNodeOperationHandler.java"
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<p>In the new handler give it a different type name (Exchange the value of <code><i>DefaultTypes.Node</i></code>). Also assign a different CSS-class to it. You can use pseudo values like 'new-node' here. And finally assign a different name to the palette label.</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"button": {
									"text": "Compare Node Handler",
									"commands": [
										{
											"fileDiff": {
												"fileName": "glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNewNodeOperationHandler.java",
												"solution": ".tutorial/solution/MinimalCreateNewNodeOperationHandler.java"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<p>In order to see our new node we have to get back to <code><i>MinimalGLSPModule.java</i></code> which we looked at before, to register this new <code><i>CreateNewNodeOperationHandler</i></code>.</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"button": {
									"text": "Compare GLSP Module",
									"commands": [
										{
											"fileDiff": {
												"fileName": "glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalGLSPModule.java",
												"solution": ".tutorial/solution/MinimalGLSPModule.java"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<br><h4>Client part</h4><p>The client part mostly consists of Theia boilerplate code. However, in the package minimal-glsp we have the file 'di.config.ts' that registers all the node types to respective shapes.</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"button": {
									"text": "Open File",
									"commands": [
										{
											"openFile": "glsp-examples/minimal/client/minimal-glsp/src/di.config.ts"
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<p>So lets add our new node to the diagram module by adding a function call of <code>configureModelElement()</code> with our node-name in it. Let's use a circle shape for our new node, so <code>CircularNode</code> and <code>CircularNodeView</code>.</p>"
				},
				{
					"hint": {
						"text": "Having difficulities?",
						"content": [
							{
								"html": "<p>Compare the file to a example solution.</p>"
							},
							{
								"button": {
									"text": "Compare di.config.ts",
									"commands": [
										{
											"fileDiff": {
												"fileName": "glsp-examples/minimal/client/minimal-glsp/src/di.config.ts",
												"solution": ".tutorial/solution/di.config.ts"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"html": "<p>Finally, let's rebuild the example and try the new node type, it will be available in the palette:</p>"
				},
				{
					"button": {
						"text": "Re-Build Minimal Example",
						"commands": [
							{
								"terminalCommands": [
									"cd glsp-examples/minimal/server/org.eclipse.glsp.example.minimal && mvn clean install",
									"cd glsp-examples/minimal/client/minimal-theia && yarn copy:server",
									"silently kill -9 $(lsof -t -i:3000)",
									"silently kill -9 $(lsof -t -i:5013)",
									"silently cd glsp-examples/minimal/client && yarn start:browser"
								]
							}
						]
					}
				},
				{
					"html": "<p>Thank you for completing this short tutorial. We are happy to receive your feedback about it, please use <a href='https://github.com/eclipsesource/glsp-tutorial'>this repository</a> and create issues. We are aware that this tutorial is very short and only covers some basics. If you want to see more content like this, please get in contact with us! Finally, please have a look at the <a href='https://www.eclipse.org/glsp/'>GLSP website</a> for more documentation</p>"
				}
			],
			"test": [
				{
					"tests": [
						{
							"testName": "Checking files in current directory",
							"command": {
								"checkIfFilesExist": [
									"glsp-examples/.gitignore",
									"glsp-examples/README.md",
									"glsp-examples/CONTRIBUTING.md",
									"glsp-examples/Jenkinsfile",
									"glsp-examples/LICENSE",
									"glsp-examples/minimal/client/workspace/example.minimal",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNodeOperationHandler.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalDiagramConfiguration.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalGLSPModule.java",
									"glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalServerLauncher.java"
								]
							}
						}
					]
				}
			],
			"solve": [
				{
					"terminalCommands": [
						"cp .tutorial/solution/MinimalCreateNewNodeOperationHandler.java glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/handler/MinimalCreateNewNodeOperationHandler.java",
						"cp .tutorial/solution/MinimalGLSPModule.java glsp-examples/minimal/server/org.eclipse.glsp.example.minimal/src/main/java/org/eclipse/glsp/example/minimal/MinimalGLSPModule.java",
						"cp .tutorial/solution/di.config.ts glsp-examples/minimal/client/minimal-glsp/src/di.config.ts"
					]
				}
			]
		}
	]
}
